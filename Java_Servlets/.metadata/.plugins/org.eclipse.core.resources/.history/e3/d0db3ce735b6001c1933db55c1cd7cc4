package com.javalec.ascent.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.sql.DataSource;

import com.javalec.ascent.dto.ADtoP;

public class ADaoP {
DataSource dataSource;
	
	public ADaoP() {
		try {
			Context context = new InitialContext();
			dataSource = (DataSource) context.lookup("java:comp/env/jdbc/mvc");
		}catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	public ArrayList<ADtoP> APp01list() {
		ArrayList<ADaoP> dtos = new ArrayList<ADaoP>();
		Connection conn = null;
		PreparedStatement ps = null;
		ResultSet rs = null;
		
		try {
			conn =dataSource.getConnection();
			String query1 = "select productDetail,productName,productPrice,productSize from product where productCode like 'P-%'";
			ps = conn.prepareStatement(query1);
			rs = ps.executeQuery();
			
			while(rs.next()) {
				String productDetail = rs.getString("productDetail");
				String productName = rs.getString("productName");
				int productPrice = rs.getInt("productPrice");
				String productSize = rs.getString("productSize");
				
				ADtoP dto = new ADtoP(productSize, productName, productPrice, productSize, productDetail, productSize);
				ADtoP.add(dto);
			}
			
		}catch (Exception e) {
			e.printStackTrace();
			
		}finally {				//try catch 하고 나서 이상이 있든 없든 마지막에 오는 final
			try {
				if(rs != null) rs.close(); //데이터가 있으면 close
				if(ps!=null) ps.close();
				if(conn!= null) conn.close();
 			}catch (Exception e) {
				e.printStackTrace();
			}
		}

	
		
	}
	
	
	
	
	
}

