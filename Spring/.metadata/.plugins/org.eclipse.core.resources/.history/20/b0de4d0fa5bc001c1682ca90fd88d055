package com.springlec.base0701.controller;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;

import com.springlec.base0701.command.BCommand;
import com.springlec.base0701.util.Constant;

@Controller
public class BController {
	

	private JdbcTemplate template;
	
	@Autowired
	public void setTemplate(JdbcTemplate template) {
		this.template = template;
		Constant.template = this.template; //static에 들어갔으니 아무대서나 부를 수 잇음 
	}
	
	private BCommand listCommand = null;
	private BCommand writeCommand = null;
	private BCommand contentCommand = null;
	private BCommand deleteCommand = null;
	private BCommand modifyCommand = null;
	
	@Autowired //appservlet과 java 연결
	public void auto(BCommand list, BCommand write, BCommand content,
			BCommand delete, BCommand modify) {
		this.listCommand = list;
		this.writeCommand = write;
		this.contentCommand = content;
		this.deleteCommand = delete;
		this.modifyCommand = modify;
	}
	@RequestMapping("/list")
	public String list(Model model) {
		System.out.println("list()"); //dao에서 정한 이름
		//command = new BListCommand();
		listCommand .execute(model);
		
		return "list";
	}	
	@RequestMapping("/write") //주소창
	public String write(HttpServletRequest request,Model model) {
		//System.out.println("write()");
		
		model.addAttribute("request",request);
		//command = new BContentCommand();
		writeCommand.execute(model);
		
		return "write_view";
	}
	@RequestMapping("/content") //주소창
		public String content(HttpServletRequest request,Model model) {
		//	System.out.println("content()");
			
			model.addAttribute("request",request);
		//	command = new BContentCommand();
			contentCommand.execute(model);
			
			return "content_view";
	}
}
